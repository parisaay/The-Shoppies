{"version":3,"sources":["searchForm.jsx","pagination.jsx","App.js","paginate.js","reportWebVitals.js","index.js"],"names":["SearchBox","value","onChange","id","onSubmit","e","preventDefault","className","htmlFor","style","fontWeight","fontSize","color","autoFocus","type","name","placeholder","Pagination","props","pageSize","moviesCount","onPageChange","currentPage","totalPage","pages","_","range","map","page","onClick","App","useState","movies","setMovies","nominates","setNomminates","searchedMovie","setSearchedMovie","setCurrentPage","count","length","paginatedmovies","items","pageNumber","startIndex","slice","take","paginate","handleSearch","a","originalMovies","searchedTitle","currentTarget","basicUrl","axios","get","foundmovies","data","Response","Search","validate","movie","filter","m","imdbID","useEffect","values","keys","Object","localStorage","keyLength","i","currentValue","getItem","nominee","split","push","console","log","Title","Year","disabled","toast","error","newNominates","info","setItem","handleNominate","renderTable","nominate","filterednominates","p","removeItem","handleRemove","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.91e400d3.chunk.js","sourcesContent":["import React from 'react';\n\nconst SearchBox =({value,onChange}) =>\n   \n\n     { \n        return ( \n        \n          <form id=\"dashboard-form\" onSubmit={(e)=> e.preventDefault()}>\n         <div  id=\"form\" className=\"form-group \">\n        <label htmlFor=\"search\" className=\"form-label\" style={{fontWeight:\"bold\",fontSize:\"20px\",color:\"rebeccapurple\"}}>Movie Title</label>\n         <input\n          autoFocus\n          className=\"form-control\"\n          type=\"text\" \n          name=\"search\" \n          value={value}\n          onChange={onChange}\n          placeholder=\"Type to search...\" /> \n            </div>\n        \n         </form>\n         );\n    }\n\n \nexport default SearchBox;","import React from 'react';\nimport _ from 'lodash';\n\nconst Pagination = (props) => {\n   \n const { pageSize, moviesCount,onPageChange,currentPage }=props\n \n const totalPage=moviesCount/pageSize\n  \n const pages= _.range(1,totalPage+1);\n\n    \n\n\n    return ( \n    <nav>\n        <ul className=\"pagination\">\n            {pages.map(page => (\n                <li  key={page}  className={ page===currentPage ? \"page-item active\" : \"page-item\"} >\n                  <a className=\"page-link\" onClick={()=>onPageChange(page)}>{page}</a>\n                </li>\n            ))}\n            \n        </ul>\n    </nav> );\n}\n \nexport default Pagination;","import React, { useState,useEffect } from 'react';\nimport SearchBox from './searchForm';\nimport {ToastContainer,toast} from 'react-toastify'\nimport Pagination from './pagination';\nimport axios from \"axios\";\nimport './App.css';\nimport 'react-toastify/dist/ReactToastify.css'\nimport {paginate} from './paginate'\n\n\n\n\nfunction App(props){\n\nconst [movies,setMovies]=useState([]);\nconst [nominates,setNomminates]=useState([]);\nconst [searchedMovie,setSearchedMovie]=useState(\"\");\nconst [pageSize]=useState(4)\nconst [currentPage,setCurrentPage]=useState(1)\n\nconst count=movies.length\nconst paginatedmovies=paginate(pageSize,movies,currentPage)\n\nconst handleRemove=nominate=>{\n  \n  const filterednominates=nominates.filter(p=>p.imdbID!==nominate.imdbID);\n  \n  setNomminates(filterednominates)\n  localStorage.removeItem(nominate.imdbID)\n};\n\nconst handleNominate=movie=>{\n\n  if( nominates.length>=5){\n    \n    toast.error(\"All nominees have been chosen! \")\n  }\n  \n  else{\n    const newNominates=[...nominates,movie]\n    \n    \n    if(newNominates.length===5){\n      toast.info(\"You have chosen all your five nominees! \")\n    \n    }\n  \n  \n  setNomminates(newNominates)\n  console.log(newNominates)\n  for (let i=0;i<newNominates.length;i++){\n    localStorage.setItem(newNominates[i].imdbID,`${newNominates[i].Year}-${newNominates[i].Title}`)\n    \n    \n    };\n  \n  };\n}\nconst renderNominate=()=>{\n\n  if (nominates.length===0)\n  return <p style={{fontSize: \"17px\",fontWeight:\"lighter\",color:\"darkblue\"}}>Nothing selected!</p>\n  \n return <ul className=\"list-group\">{nominates.map(nominate=>\n <li key={nominate.imdbID} className=\"list-group-item d-flex justify-content-between align-items-center\">\n   {nominate.Title} {nominate.Year}\n   <button\n  className=\"btn btn-sm badge badge-danger badge-pill\"\n  onClick={() => handleRemove(nominate)}\n >\n  Remove\n </button>\n </li>)}\n </ul>\n  \n}\n\nconst renderTable=()=>{\n  if (count===0)\n  return;\n  return <div>\n  <p style={{fontWeight:\"bold\"}}>Result for {searchedMovie}: Found {count} movies</p>\n \n  \n  <table className=\"table\">\n    <thead>\n      <tr>\n        <th>Title</th>\n        <th>Year</th>\n        <th>Nominate</th>\n      </tr>\n    </thead>\n    \n    \n    <tbody>\n          \n          {paginatedmovies.map((movie) => (\n            <tr key={movie.imdbID}>\n              <td>{movie.Title}</td>\n              <td>{movie.Year}</td>\n              <td>\n                <button\n                  disabled= {validate(movie)}\n                  className=\"btn btn-info btn-sm\"\n                  onClick={()=>handleNominate(movie)}\n                >\n                  Nominate\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n  </table>\n  \n  \n  \n\n  </div>\n \n  \n}\n\nconst handleSearch=async e=>{\n  const originalMovies=movies\n     const searchedTitle=e.currentTarget.value\n     setSearchedMovie(searchedTitle)\n     const basicUrl=`https://www.omdbapi.com/?apikey=bb1928f5&s=${searchedTitle}*&type=movie`\n     \n     try{\n      const {data:foundmovies}= await axios.get(basicUrl)\n      if(foundmovies.Response === \"True\")\n      {\n      setMovies(foundmovies.Search)\n    }\n    else\n    {\n      \n      setMovies([])\n      setCurrentPage(1)\n\n    }\n\n     }\n    \n     catch(ex)\n     {\n      setMovies(originalMovies)\n     }\n\n\n     \n  }\n\nconst validate=movie=>{\n  const nominated=nominates.filter(m=>m.imdbID===movie.imdbID)\n  \n  if (nominated.length!==0)\n   return true;\n  return false;\n}\n\nconst handlePageChange=page=>{\n  \n  setCurrentPage(page)\n  \n}\n \nuseEffect(()=>{\nlet  values = [],\n        keys = Object.keys(localStorage),\n        keyLength = keys.length;\n    for(let i=0;i<keyLength;i++){\n      let currentValue = localStorage.getItem(keys[i])\n      let nominee = {\"imdbID\": keys[i], \"Title\": currentValue.split('-')[1], \"Year\"  :currentValue.split('-')[0]} \n        values.push(nominee);\n    }\n    console.log(values)\n    setNomminates(values)\n\n},[])\n\n\nreturn (\n  <div className=\"main-container\">\n    <ToastContainer />\n    <SearchBox value={searchedMovie} onChange={handleSearch} />\n    <div className=\"result-container\">\n      <div className=\"search-result\">\n        {renderTable()}\n        <div>\n          {count > 0 ? (\n            <Pagination\n              pageSize={pageSize}\n              moviesCount={count}\n              currentPage={currentPage}\n              onPageChange={handlePageChange}\n            />\n          ) : null}\n        </div>\n      </div>\n\n      <div className=\"nomination-list\">\n        <p style={{fontSize:\"20px\",fontWeight:'bold',color:\"s\"}}>Nomination List</p>\n        {renderNominate()}\n      </div>\n    </div>\n  </div>\n);\n}\n\nexport default App;\n","import _ from 'lodash'\n\nexport const paginate=(pageSize,items,pageNumber)=>{\nconst startIndex=(pageNumber-1)* pageSize   \nreturn _(items)\n.slice(startIndex)\n.take(pageSize)\n.value()\n}\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Helmet } from 'react-helmet'\n\n//import 'font-awesome/css/font-awesome.css';\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n    </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}